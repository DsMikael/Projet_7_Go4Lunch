// Generated by view binder compiler. Do not edit!
package com.mdasilva.go4lunch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.mdasilva.go4lunch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHungryContactBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addFavNeighbour;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView itemHungryAddress;

  @NonNull
  public final Button itemHungryCall;

  @NonNull
  public final Button itemHungryLike;

  @NonNull
  public final TextView itemHungryName;

  @NonNull
  public final Button itemHungryWebsite;

  @NonNull
  public final ImageView itemListAvatar;

  @NonNull
  public final Toolbar myToolbar;

  @NonNull
  public final ConstraintLayout profileContent;

  private ActivityHungryContactBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addFavNeighbour, @NonNull ConstraintLayout constraintLayout,
      @NonNull TextView itemHungryAddress, @NonNull Button itemHungryCall,
      @NonNull Button itemHungryLike, @NonNull TextView itemHungryName,
      @NonNull Button itemHungryWebsite, @NonNull ImageView itemListAvatar,
      @NonNull Toolbar myToolbar, @NonNull ConstraintLayout profileContent) {
    this.rootView = rootView;
    this.addFavNeighbour = addFavNeighbour;
    this.constraintLayout = constraintLayout;
    this.itemHungryAddress = itemHungryAddress;
    this.itemHungryCall = itemHungryCall;
    this.itemHungryLike = itemHungryLike;
    this.itemHungryName = itemHungryName;
    this.itemHungryWebsite = itemHungryWebsite;
    this.itemListAvatar = itemListAvatar;
    this.myToolbar = myToolbar;
    this.profileContent = profileContent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHungryContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHungryContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hungry_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHungryContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_fav_neighbour;
      FloatingActionButton addFavNeighbour = ViewBindings.findChildViewById(rootView, id);
      if (addFavNeighbour == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.item_hungry_address;
      TextView itemHungryAddress = ViewBindings.findChildViewById(rootView, id);
      if (itemHungryAddress == null) {
        break missingId;
      }

      id = R.id.item_hungry_call;
      Button itemHungryCall = ViewBindings.findChildViewById(rootView, id);
      if (itemHungryCall == null) {
        break missingId;
      }

      id = R.id.item_hungry_like;
      Button itemHungryLike = ViewBindings.findChildViewById(rootView, id);
      if (itemHungryLike == null) {
        break missingId;
      }

      id = R.id.item_hungry_name;
      TextView itemHungryName = ViewBindings.findChildViewById(rootView, id);
      if (itemHungryName == null) {
        break missingId;
      }

      id = R.id.item_hungry_website;
      Button itemHungryWebsite = ViewBindings.findChildViewById(rootView, id);
      if (itemHungryWebsite == null) {
        break missingId;
      }

      id = R.id.item_list_avatar;
      ImageView itemListAvatar = ViewBindings.findChildViewById(rootView, id);
      if (itemListAvatar == null) {
        break missingId;
      }

      id = R.id.my_toolbar;
      Toolbar myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }

      ConstraintLayout profileContent = (ConstraintLayout) rootView;

      return new ActivityHungryContactBinding((ConstraintLayout) rootView, addFavNeighbour,
          constraintLayout, itemHungryAddress, itemHungryCall, itemHungryLike, itemHungryName,
          itemHungryWebsite, itemListAvatar, myToolbar, profileContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
