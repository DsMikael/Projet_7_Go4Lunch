// Generated by view binder compiler. Do not edit!
package com.mdasilva.go4lunch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.navigation.NavigationView;
import com.mdasilva.go4lunch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final Toolbar myToolbar;

  @NonNull
  public final BottomNavigationView navBottomMenu;

  @NonNull
  public final FragmentContainerView navHostFragmentActivityMain;

  @NonNull
  public final NavigationView navView;

  private ActivityHomeBinding(@NonNull DrawerLayout rootView, @NonNull ConstraintLayout container,
      @NonNull DrawerLayout drawerLayout, @NonNull Toolbar myToolbar,
      @NonNull BottomNavigationView navBottomMenu,
      @NonNull FragmentContainerView navHostFragmentActivityMain, @NonNull NavigationView navView) {
    this.rootView = rootView;
    this.container = container;
    this.drawerLayout = drawerLayout;
    this.myToolbar = myToolbar;
    this.navBottomMenu = navBottomMenu;
    this.navHostFragmentActivityMain = navHostFragmentActivityMain;
    this.navView = navView;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      ConstraintLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.my_toolbar;
      Toolbar myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }

      id = R.id.nav_bottom_menu;
      BottomNavigationView navBottomMenu = ViewBindings.findChildViewById(rootView, id);
      if (navBottomMenu == null) {
        break missingId;
      }

      id = R.id.nav_host_fragment_activity_main;
      FragmentContainerView navHostFragmentActivityMain = ViewBindings.findChildViewById(rootView, id);
      if (navHostFragmentActivityMain == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      return new ActivityHomeBinding((DrawerLayout) rootView, container, drawerLayout, myToolbar,
          navBottomMenu, navHostFragmentActivityMain, navView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
