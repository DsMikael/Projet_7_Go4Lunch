// Generated by view binder compiler. Do not edit!
package com.mdasilva.go4lunch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mdasilva.go4lunch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HungryFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout itemList;

  @NonNull
  public final TextView itemListHungryAddress;

  @NonNull
  public final ImageView itemListHungryAvatar;

  @NonNull
  public final TextView itemListHungryMates;

  @NonNull
  public final TextView itemListHungryName;

  @NonNull
  public final TextView itemListHungryOpening;

  @NonNull
  public final TextView itemListHungryRange;

  private HungryFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout itemList, @NonNull TextView itemListHungryAddress,
      @NonNull ImageView itemListHungryAvatar, @NonNull TextView itemListHungryMates,
      @NonNull TextView itemListHungryName, @NonNull TextView itemListHungryOpening,
      @NonNull TextView itemListHungryRange) {
    this.rootView = rootView;
    this.itemList = itemList;
    this.itemListHungryAddress = itemListHungryAddress;
    this.itemListHungryAvatar = itemListHungryAvatar;
    this.itemListHungryMates = itemListHungryMates;
    this.itemListHungryName = itemListHungryName;
    this.itemListHungryOpening = itemListHungryOpening;
    this.itemListHungryRange = itemListHungryRange;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HungryFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HungryFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.hungry_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HungryFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout itemList = (ConstraintLayout) rootView;

      id = R.id.item_list_hungry_address;
      TextView itemListHungryAddress = ViewBindings.findChildViewById(rootView, id);
      if (itemListHungryAddress == null) {
        break missingId;
      }

      id = R.id.item_list_hungry_avatar;
      ImageView itemListHungryAvatar = ViewBindings.findChildViewById(rootView, id);
      if (itemListHungryAvatar == null) {
        break missingId;
      }

      id = R.id.item_list_hungry_mates;
      TextView itemListHungryMates = ViewBindings.findChildViewById(rootView, id);
      if (itemListHungryMates == null) {
        break missingId;
      }

      id = R.id.item_list_hungry_name;
      TextView itemListHungryName = ViewBindings.findChildViewById(rootView, id);
      if (itemListHungryName == null) {
        break missingId;
      }

      id = R.id.item_list_hungry_opening;
      TextView itemListHungryOpening = ViewBindings.findChildViewById(rootView, id);
      if (itemListHungryOpening == null) {
        break missingId;
      }

      id = R.id.item_list_hungry_range;
      TextView itemListHungryRange = ViewBindings.findChildViewById(rootView, id);
      if (itemListHungryRange == null) {
        break missingId;
      }

      return new HungryFragmentBinding((ConstraintLayout) rootView, itemList, itemListHungryAddress,
          itemListHungryAvatar, itemListHungryMates, itemListHungryName, itemListHungryOpening,
          itemListHungryRange);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
